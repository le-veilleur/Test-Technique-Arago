// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/impression_service.proto

package impression_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Requête pour enregistrer une impression
type TrackImpressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AdId          string                 `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	ImpressionId  string                 `protobuf:"bytes,2,opt,name=impression_id,json=impressionId,proto3" json:"impression_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackImpressionRequest) Reset() {
	*x = TrackImpressionRequest{}
	mi := &file_proto_impression_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackImpressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackImpressionRequest) ProtoMessage() {}

func (x *TrackImpressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_impression_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackImpressionRequest.ProtoReflect.Descriptor instead.
func (*TrackImpressionRequest) Descriptor() ([]byte, []int) {
	return file_proto_impression_service_proto_rawDescGZIP(), []int{0}
}

func (x *TrackImpressionRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *TrackImpressionRequest) GetImpressionId() string {
	if x != nil {
		return x.ImpressionId
	}
	return ""
}

// Réponse après l'enregistrement d'une impression
type TrackImpressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackImpressionResponse) Reset() {
	*x = TrackImpressionResponse{}
	mi := &file_proto_impression_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackImpressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackImpressionResponse) ProtoMessage() {}

func (x *TrackImpressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_impression_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackImpressionResponse.ProtoReflect.Descriptor instead.
func (*TrackImpressionResponse) Descriptor() ([]byte, []int) {
	return file_proto_impression_service_proto_rawDescGZIP(), []int{1}
}

func (x *TrackImpressionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Requête pour obtenir le nombre d'impressions
type GetImpressionCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AdId          string                 `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImpressionCountRequest) Reset() {
	*x = GetImpressionCountRequest{}
	mi := &file_proto_impression_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImpressionCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImpressionCountRequest) ProtoMessage() {}

func (x *GetImpressionCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_impression_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImpressionCountRequest.ProtoReflect.Descriptor instead.
func (*GetImpressionCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_impression_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetImpressionCountRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

// Réponse avec le nombre d'impressions
type GetImpressionCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImpressionCountResponse) Reset() {
	*x = GetImpressionCountResponse{}
	mi := &file_proto_impression_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImpressionCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImpressionCountResponse) ProtoMessage() {}

func (x *GetImpressionCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_impression_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImpressionCountResponse.ProtoReflect.Descriptor instead.
func (*GetImpressionCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_impression_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetImpressionCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_proto_impression_service_proto protoreflect.FileDescriptor

const file_proto_impression_service_proto_rawDesc = "" +
	"\n" +
	"\x1eproto/impression_service.proto\x12\n" +
	"impression\"R\n" +
	"\x16TrackImpressionRequest\x12\x13\n" +
	"\x05ad_id\x18\x01 \x01(\tR\x04adId\x12#\n" +
	"\rimpression_id\x18\x02 \x01(\tR\fimpressionId\"3\n" +
	"\x17TrackImpressionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"0\n" +
	"\x19GetImpressionCountRequest\x12\x13\n" +
	"\x05ad_id\x18\x01 \x01(\tR\x04adId\"2\n" +
	"\x1aGetImpressionCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count2\xd8\x01\n" +
	"\x11ImpressionService\x12\\\n" +
	"\x0fTrackImpression\x12\".impression.TrackImpressionRequest\x1a#.impression.TrackImpressionResponse\"\x00\x12e\n" +
	"\x12GetImpressionCount\x12%.impression.GetImpressionCountRequest\x1a&.impression.GetImpressionCountResponse\"\x00B\x1eZ\x1cgenerated/impression_serviceb\x06proto3"

var (
	file_proto_impression_service_proto_rawDescOnce sync.Once
	file_proto_impression_service_proto_rawDescData []byte
)

func file_proto_impression_service_proto_rawDescGZIP() []byte {
	file_proto_impression_service_proto_rawDescOnce.Do(func() {
		file_proto_impression_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_impression_service_proto_rawDesc), len(file_proto_impression_service_proto_rawDesc)))
	})
	return file_proto_impression_service_proto_rawDescData
}

var file_proto_impression_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_impression_service_proto_goTypes = []any{
	(*TrackImpressionRequest)(nil),     // 0: impression.TrackImpressionRequest
	(*TrackImpressionResponse)(nil),    // 1: impression.TrackImpressionResponse
	(*GetImpressionCountRequest)(nil),  // 2: impression.GetImpressionCountRequest
	(*GetImpressionCountResponse)(nil), // 3: impression.GetImpressionCountResponse
}
var file_proto_impression_service_proto_depIdxs = []int32{
	0, // 0: impression.ImpressionService.TrackImpression:input_type -> impression.TrackImpressionRequest
	2, // 1: impression.ImpressionService.GetImpressionCount:input_type -> impression.GetImpressionCountRequest
	1, // 2: impression.ImpressionService.TrackImpression:output_type -> impression.TrackImpressionResponse
	3, // 3: impression.ImpressionService.GetImpressionCount:output_type -> impression.GetImpressionCountResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_impression_service_proto_init() }
func file_proto_impression_service_proto_init() {
	if File_proto_impression_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_impression_service_proto_rawDesc), len(file_proto_impression_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_impression_service_proto_goTypes,
		DependencyIndexes: file_proto_impression_service_proto_depIdxs,
		MessageInfos:      file_proto_impression_service_proto_msgTypes,
	}.Build()
	File_proto_impression_service_proto = out.File
	file_proto_impression_service_proto_goTypes = nil
	file_proto_impression_service_proto_depIdxs = nil
}
